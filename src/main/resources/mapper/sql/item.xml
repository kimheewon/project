<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 관리자 로그인  -->
<mapper namespace="itemSql">

    <!-- 캐시 회수 번호 가져오기 -->
    <select id="selectRecallItemNo" resultType="int">
        SELECT  ItemNo
        FROM    TItemInfoMgmt
        WHERE   ItemName = #{recallItemName}
    </select>
    
    <!-- 아이템 구매 테이블 insert -->
    <insert id="insertItemPurchaseRecall">
        INSERT INTO TItemPurchaseMst( PurchaseNo, ItemNo, UserNo, ItemPrice, ItemCount
                                     ,TotalItemPrice, AdminNo)
                              VALUES( #{intNumber}, #{intItemNo}, #{intUserNo}, #{intAmount}, #{intItemCount} 
                                     ,#{intTotalPrice}, #{intAdminNo})
                    
    </insert>
    
    <!-- remaincash가 있는 리스트 가져오기 -->
    <select id="selectCashAllList" resultType="CashInfo">
        SELECT CashNo           AS intCashNo
              ,RemainCashAmt    AS intRemainCash
		FROM TCashMst
		WHERE UserNo = #{userNo} AND RemainCashAmt NOT IN(0)
    </select>
    
    <!-- 구매 매핑테이블에 insert -->
    <insert id="insertRecallMapping">
        INSERT INTO TCashUsedDtl(UserNo, CashNo, PurchaseNo, RemainCashAmt)
                         VALUES (#{intUserNo}, #{intCashNo}, #{intPurchaseNo}, #{intRemainCash})
                   
    </insert>
    
    <!-- 남은돈 update -->
    <update id="updateCashRemain">
	    UPDATE TCashMst
		SET RemainCashAmt = #{intRemainCash}
		WHERE UserNo = #{intUserNo} AND CashNo = #{intCashNo}
    
    </update>
    
    <!-- 아이템구매(아이템 구매 테이블에 insert) -->
    <insert id="insertItemPurchase">
        INSERT INTO TItemPurchaseMst(PurchaseNo, ItemNo, UserNo, ItemPrice, ItemCount
                                    ,TotalItemPrice, DeliveryPrice)
                              VALUES(#{intNumber}, #{itemNo}, #{intUserNo}, #{intItemPrice}, #{itemCount}
                                    ,#{intItemTotalPrice}, #{intDeliveryPrice} )
    </insert>
    
    <!-- 배송정보 insert -->
    <insert id="insertDeliveryInfo">
    INSERT INTO TDeliveryInfoMst(PurchaseNo, UserNo, UserPhone, UserPostCode, UserAdress
                                ,UserAdress2, RequestMsg,UserName)
                          VALUES(#{intNumber}, #{intUserNo}, #{strTel}, #{strPostcode}, #{strAddress}
                                ,#{strAddress2}, #{strDeliverMsg}, #{strName})
    </insert>
    
    <!-- 구매한 아이템 정보 가져오기 -->
    <select id="selectPurchaseItem" resultType="ItemShopInfo">
        SELECT   ItemNo           AS intItemNo
		        ,ItemPrice        AS intItemPrice
		        ,ItemCount        AS itemCount
		        ,TotalItemPrice   AS intItemTotalPrice
		        ,DeliveryPrice    AS intDeliveryPrice
		FROM  TItemPurchaseMst
		WHERE PurchaseNo = #{purchaseNo}
    </select>
    
    <!-- 배송정보 가져오기 -->
    <select id="selectDeliveryInfo" resultType="ItemShopInfo">
       SELECT    d.UserName       AS strName
                ,d.UserPhone      AS strTel
                ,d.UserPostCode   AS strPostcode
                ,d.UserAdress     AS strAddress
                ,d.UserAdress2    AS strAddress2
                ,d.RequestMsg     AS strDeliverMsg
                ,d.InvoiceNumber  AS intInvoiceNumber
                ,d.CompanyCode    AS intCompanyCode
                ,c.CompanyName    AS strCompanyName
                ,c.CompanyUrl     AS strCompanyUrl
        FROM TDeliveryInfoMst d LEFT JOIN TDliveryCompany c
        ON d.CompanyCode = c.Code
        WHERE PurchaseNo = #{purchaseNo}
    </select>
    
    <!-- 아이템 구매 리스트 -->
    <select id="selectAllPurchaseList" resultType="ItemShopInfo">
	    SELECT  PurchaseNo     AS intNumber
	           ,ItemNo         AS intItemNo
	           ,PurchaseDate   AS strPurchaseDate
	           ,TotalItemPrice AS intItemTotalPrice
		FROM TItemPurchaseMst
		WHERE UserNo = #{userNo}
    </select>
    
    <!--아이템 구매 리스트(날짜검색)트 -->
    <select id="searchAllPurchaseList" resultType="ItemShopInfo"> 
        SELECT  PurchaseNo     AS intNumber
               ,ItemNo         AS intItemNo
               ,PurchaseDate   AS strPurchaseDate
               ,TotalItemPrice AS intItemTotalPrice
        FROM TItemPurchaseMst
        WHERE UserNo = #{intUserNo} AND CONVERT(NVARCHAR(11),PurchaseDate,121) BETWEEN #{searchStartDate} AND #{searchEndDate}
    </select>
    
    <!-- 아이템 구매 내역 페이징처리 -->
    <select id="selectPurchasePaging" resultType="ItemShopInfo">
        SELECT TOP 25 resultTable.*
        FROM   (SELECT TOP (25 * #{curPage}) ROW_NUMBER() OVER (ORDER BY PurchaseNo DESC)   AS rownumber
                                                            ,c.PurchaseNo                   AS intNumber
                                                            ,c.ItemNo                       AS intItemNo
                                                            ,c.PurchaseDate                 AS datePurchaseDate
                                                            ,c.TotalItemPrice               AS intItemTotalPrice
                                                            ,r.Reason                       AS strReason
                                                            ,c.Flag                         AS intFlag
                FROM TItemPurchaseMst c left join TReasonMsgMst r
                on c.PurchaseNo = r.No
                WHERE c.UserNo = #{intUserNo} ) AS resultTable
        WHERE rownumber > (#{curPage} - 1) * 25
    </select>
    
     <!-- 아이템 구매 리스트 페이징 처리(날짜검색) -->
    <select id="searchAllPurchasePaging" resultType="ItemShopInfo">
        SELECT TOP 25 resultTable.*
        FROM   (SELECT TOP (25 * #{curPage}) ROW_NUMBER() OVER (ORDER BY PurchaseNo DESC)   AS rownumber
                                                            ,c.PurchaseNo                   AS intNumber
                                                            ,c.ItemNo                       AS intItemNo
                                                            ,c.PurchaseDate                 AS datePurchaseDate
                                                            ,c.TotalItemPrice               AS intItemTotalPrice
                                                            ,r.Reason                       AS strReason
                                                            ,c.Flag                         AS intFlag
                FROM TItemPurchaseMst c left join TReasonMsgMst r
                on c.PurchaseNo = r.No
                WHERE c.UserNo = #{intUserNo} AND CONVERT(NVARCHAR(11),PurchaseDate,121) BETWEEN #{searchStartDate} AND #{searchEndDate}) AS resultTable
        WHERE rownumber > (#{curPage} - 1) * 25
    </select>
    
    <!-- 아이템 명 찾기 -->
    <select id="selectItemName" resultType="String">
        SELECT ItemName
        FROM TItemInfoMgmt
        WHERE ItemNo = #{no}
    </select>
    
    <!-- 매핑테이블에서 취소할 항목 가져오기 -->
    <select id="selectPurchaseCancelMap" resultType="ItemShopInfo">
		SELECT m.CashNo         AS intNumber
		      ,m.RemainCashAmt  AS intRemainCash
		      ,c.CashAmt        AS intCash
		FROM  TCashUsedDtl m LEFT JOIN TCashMst c
		ON    m.CashNo = c.CashNo
		WHERE m.PurchaseNo =  #{purchaseNo}    
    </select>
    
    <!-- remainCash 업데이트 -->
    <update id="updateRemainCash">
	    UPDATE TCashMst
		SET RemainCashAmt = RemainCashAmt + #{intRemainCash}
		WHERE CashNo = #{intNumber}
    </update>
    
    <!-- 매핑테이블 삭제 -->
    <delete id="deleteMapping">
	    DELETE TCashUsedDtl
        WHERE PurchaseNo = #{purchaseNo}
    </delete>
    
    <!-- 아이템 구매 테이블 구매 취소 update -->
    <update id="updateItemPurchaseCancel">
        UPDATE TItemPurchaseMst
        SET    Flag = 0
        WHERE PurchaseNo = #{purchaseNo}
    </update>
    
    <!-- 배송 테이블 삭제 -->
    <delete id="deleteDeliver">
        DELETE TDeliveryInfoMst
        WHERE PurchaseNo = #{purchaseNo}
    </delete>
    
    <!-- 택배회사 정보 가져오기 -->
    <select id="selectCompany" resultType="ItemShopInfo">
        SELECT   Code           AS intCompanyCode
                ,CompanyName    AS strCompanyName
                ,CompanyUrl     AS strCompanyUrl
        FROM TDliveryCompany
    </select>
</mapper>