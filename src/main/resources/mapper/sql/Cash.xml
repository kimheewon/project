<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 관리자 로그인  -->
<mapper namespace="cashSql">
    
    <insert id="insertOrderNo">
        INSERT INTO TCreatePk
        VALUES(#{intOrderNo})    
    </insert>
    
    <!-- 최근 번호 가져오기 -->
    <select id="selectOrderNo" resultType="BigInteger">
        SELECT MAX(PkNo)
        FROM TCreatePk
    </select>
    
    <!-- 결제 요청 저장 -->
    <insert id="insertCashRequest">
        INSERT INTO TCashRequestMst (OrderNo, UserNo, PayAmt, UserId,  Pgcode)
                       VALUES(#{intorderNo}, #{intUserNo}, #{amount}, #{user_id},#{pgcode})    
    </insert>
    
    <!-- OrderNo 가져오기 -->
    <select id="selectRequestOrderNo" resultType="int">
        SELECT MAX(OrderNo)
        FROM TCashRequestMst
    </select>
    
    
    <!-- DB에  결제 결과값 저장 -->
    <insert id="insertPgResult">
        INSERT INTO TCashMst (CashNo, UserNo, PayAmt, CashAmt, PurchaseState
                             ,Tid, Code, Message, UserId, Cid, OrderNo
                             ,Pgcode, TransactionDate, Card_info, Payhash, RemainCashAmt)
                       VALUES(#{intCashNo}, #{intUserNo}, #{amount}, #{intCashAmt}, #{strPurchaseState}
                             ,#{tid}, #{code}, #{message}, #{user_id}, #{cid}, #{intorderNo}
                             ,#{pgcode}, #{transaction_date}, #{card_info}, #{payhash}, #{intCashAmt})    
    </insert>

    <!-- 회원 번호 찾기 -->
    <select id="selectUserNo" resultType="int">
        SELECT   UserNo   
        FROM TUser
        WHERE UserId = #{id} 
    </select>
    
    <!-- 유저의 기존 보유 캐시 정보 가져오기  -->
    <select id="selectUserCashInfo" resultType="User">
       SELECT TotalCashAmt    AS intTotalCashAmt
             ,TotalInCashAmt  AS intTotalInCashAmt
             ,TotalOutCashAmt AS intTotalOutCashAmt
       FROM TUserCashMst
       WHERE UserNo = #{userNo}
    </select>
    
    <!-- Cash 충전 -->
    <update id="updateUserCashMst">    
		UPDATE TUserCashMst
		SET    TotalInCashAmt = #{intTotalInCashAmt}
		      ,TotalCashAmt = #{intTotalCashAmt}
		WHERE  UserNo = #{intUserNo}
    </update>
    
    <!--충전한 캐시정보 가져오기  -->
    <select id="selectPgCashAmount" resultType="int">
        SELECT CashAmt 
        FROM TCashMst
        WHERE OrderNo = #{orderNo}        
    </select>
    
    <!-- 캐시 내역 가져오기 -->
    <select id="selectCashList" resultType="PGInfo">
        SELECT   c.CashNo             AS intCashNo
                ,c.TransactionDate    AS transaction_date
                ,c.PurchaseState      AS strPurchaseState
                ,c.PayAmt             AS amount
                ,c.CashAmt            AS intCashAmt
                ,c.RemainCashAmt      AS intRemainCashAmt
                ,c.Pgcode             AS pgcode
                ,r.Reason             AS strReason
                ,r.AdminNo            AS intAdminNo
        FROM    TCashMst c LEFT JOIN TReasonMsgMst r
        ON      c.CashNo = r.No
        WHERE   c.UserNo = #{userNo}
        ORDER BY CashNo DESC
    </select>
    
     <!-- 캐시 내역 가져오기(날짜검색) -->
    <select id="searchCashList" resultType="PGInfo">
        SELECT   c.CashNo             AS intCashNo
                ,c.TransactionDate    AS transaction_date
                ,c.PurchaseState      AS strPurchaseState
                ,c.PayAmt             AS amount
                ,c.CashAmt            AS intCashAmt
                ,c.RemainCashAmt      AS intRemainCashAmt
                ,c.Pgcode             AS pgcode
                ,r.Reason             AS strReason
                ,r.AdminNo            AS intAdminNo
        FROM    TCashMst c LEFT JOIN TReasonMsgMst r
        ON      c.CashNo = r.No
        WHERE   c.UserNo = #{intUserNo} AND SUBSTRING(c.TransactionDate,0,11) BETWEEN #{searchStartDate} AND #{searchEndDate}
        ORDER BY CashNo DESC
    </select>
    
    
    <!-- 전체 결제 내역 가져오기 -->
    <select id="selectAllCashList" resultType="PGInfo">
        SELECT   c.CashNo             AS intCashNo
                ,c.TransactionDate    AS transaction_date
                ,c.PurchaseState      AS strPurchaseState
                ,c.PayAmt             AS amount
                ,c.CashAmt            AS intCashAmt
                ,c.RemainCashAmt      AS intRemainCashAmt
                ,c.Pgcode             AS pgcode
                ,r.Reason             AS strReason
                ,c.UserNo             AS intUserNo
                ,c.UserId             AS user_id
                ,r.AdminNo            AS intAdminNo
        FROM    TCashMst c LEFT JOIN TReasonMsgMst r
        ON      c.CashNo = r.No
        ORDER BY CashNo DESC
    </select>
    
    <!-- 캐시 내역 페이징처리 -->
    <select id="selectCashPaging" resultType="PGInfo">
        SELECT TOP 25 resultTable.*
        FROM   (SELECT TOP (25 * #{curPage}) ROW_NUMBER() OVER (ORDER BY CashNo DESC)    AS rownumber
                                                            ,c.CashNo             AS intCashNo
                                                            ,c.TransactionDate    AS transaction_date
                                                            ,c.PurchaseState      AS strPurchaseState
                                                            ,c.PayAmt             AS amount
                                                            ,c.CashAmt            AS intCashAmt
                                                            ,c.Pgcode             AS pgcode
                                                            ,r.Reason             AS strReason
                FROM TCashMst c left join TReasonMsgMst r
                on c.CashNo = r.No
                WHERE c.UserNo = #{intUserNo} ) AS resultTable
        WHERE rownumber > (#{curPage} - 1) * 25
    </select>
    
     <!-- 캐시 내역 페이징처리(날짜검색) -->
    <select id="searchCashPaging" resultType="PGInfo">
        SELECT TOP 25 resultTable.*
        FROM   (SELECT TOP (25 * #{curPage}) ROW_NUMBER() OVER (ORDER BY CashNo DESC)    AS rownumber
                                                            ,c.CashNo             AS intCashNo
                                                            ,c.TransactionDate    AS transaction_date
                                                            ,c.PurchaseState      AS strPurchaseState
                                                            ,c.PayAmt             AS amount
                                                            ,c.CashAmt            AS intCashAmt
                                                            ,c.Pgcode             AS pgcode
                                                            ,r.Reason             AS strReason
                FROM TCashMst c left join TReasonMsgMst r
                on c.CashNo = r.No
                WHERE c.UserNo = #{intUserNo} AND SUBSTRING(c.TransactionDate,0,11) BETWEEN #{searchStartDate} AND #{searchEndDate} ) AS resultTable
        WHERE rownumber > (#{curPage} - 1) * 25
    </select>
    
    <!-- DB에서 결재 요청 정보 가져오기 -->
    <select id="selectRequestInfo" resultType="PgRequest">
        SELECT   OrderNo    AS intOrderNo
                ,UserNo     AS user_no
                ,PayAmt     AS amount
                ,UserId     AS user_id
                ,Pgcode     AS pgcode
        FROM    TCashRequestMst
        WHERE   OrderNo = #{orderNo}
    </select>
   
   <!--  상태 update-->
   <update id="updateState">
        UPDATE TCashRequestMst
        SET State = '결제 완료'
        WHERE  OrderNo = #{orderNo}
   </update>
   
    <!-- 회원 id 찾기 -->
    <select id="selectUserId" resultType="String">
        SELECT  UserId
        FROM    TUser
        WHERE   UserNo = #{userNo}
    </select>
    
    <!-- 보낼 취소 정보 가져오기 -->
    <select id="cashCancel" resultType="PgCancelInfo">
        SELECT   Pgcode     AS pgcode
				,UserId     AS user_id
				,Tid        AS tid
				,PayAmt     AS amount
		FROM TCashMst
		WHERE CashNo = #{cashNo}
    </select>
    
    <!-- DB에 결제 취소 내역 update -->
    <update id="updateCancel">
	    UPDATE  TCashMst
	    SET     PurchaseState = #{strPurchaseStae} 
	           ,CancelDate = #{cancel_date}
	    WHERE   CashNo = #{intCashNo}
    </update>
    
    <!-- 사용자 번호 가져오기 -->
    <select id="selectCancelUserNo" resultType="int">
	    SELECT  UserNo
	    FROM    TCashMst
	    WHERE   CashNo = #{cashNo}
    </select>
    
    <!-- 사용자 캐시AMT update -->
    <update id="updateCancelUserCashMst">
        UPDATE TUserCashMst
        SET    TotalOutCashAmt = #{intTotalOutCashAmt}
              ,TotalCashAmt = #{intTotalCashAmt}
        WHERE  UserNo = #{intUserNo}
    </update>
    
     <!-- 사용자 현재 보유 캐시 가져오기 -->
    <select id="selectUserCashAmt" resultType="int">
        SELECT  TotalCashAmt
        FROM    TUserCashMst
        WHERE   UserNo = #{userNo}
    </select>
    
    <!-- 사유 테이블에 입력 -->
    <insert id="insertMemo">
        INSERT INTO TReasonMsgMst (UserNo, Type, Reason, No ,AdminNo)
                       VALUES(#{intUserNo}, #{intType}, #{strMemo}, #{intNumber}, #{intAdminNo})    
    </insert>
    
     <!-- DB에  결제 결과값 저장 -->
    <insert id="insertCashMstPayment">
        INSERT INTO TCashMst (CashNo, UserNo, CashAmt, PurchaseState, TransactionDate
                             ,UserId, RemainCashAmt)
                       VALUES(#{intNumber}, #{intUserNo}, #{intAmount}, #{strState}, #{strDate}
                             ,#{strUserId}, #{intAmount})    
    </insert>
    
    <!-- 관리자 아이디 -->
    <select id="selectAdminId" resultType="String">        
        SELECT AdminId
        FROM TAdmin
        WHERE AdminNo = #{intAdminNo}
    </select>
    
    <!-- 회원 목록 가져오기 -->
    <select id="selectCashMember" resultType="User">
	    SELECT   u.UserNo            AS intUserNo
	            ,u.UserId            AS strUserid
				,c.TotalInCashAmt    AS intTotalInCashAmt
				,c.TotalOutCashAmt   AS intTotalOutCashAmt
				,c.TotalCashAmt      AS intTotalCashAmt
				,u.UserGrade         AS strUserGrade
		FROM TUserCashMst c LEFT JOIN TUser u
		ON c.UserNo = u.UserNo
	    ORDER BY u.UserDate DESC
    </select>
    
     <!-- Cash 회수 -->
    <update id="updateUserCashOutMst">    
        UPDATE TUserCashMst
        SET    TotalOutCashAmt = #{intTotalOutCashAmt}
              ,TotalCashAmt = #{intTotalCashAmt}
        WHERE  UserNo = #{intUserNo}
    </update>
    
</mapper>